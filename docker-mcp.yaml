# Docker MCP catalog configuration for Desktop Commander
# This file defines how Desktop Commander should be configured in the Docker MCP Gateway
# with new configurable filesystem paths and network settings.

registry:
  desktop-commander:
    # Container image
    image: "mcp/desktop-commander:latest"
    
    # CRITICAL: Enable long-lived container mode to maintain filesystem persistence
    # This prevents the MCP Gateway from creating fresh containers for each tool call
    longLived: true
    
    # Environment variables for configuration
    env:
      - name: "MCP_CLIENT_DOCKER"
        value: "true"
      - name: "NODE_ENV"
        value: "production"
      # Filesystem configuration
      - name: "ALLOWED_DIRECTORIES"
        value: "/Users/username/Desktop,/Users/username/Documents,/Users/username/Downloads"
      # Network configuration
      - name: "DISABLE_NETWORK"
        value: "false"
      - name: "NETWORK_TIMEOUT"
        value: "30"
      - name: "ALLOWED_HOSTS"
        value: "api.github.com,*.example.com"
      # Security configuration
      - name: "ENABLE_TELEMETRY"
        value: "true"
      - name: "FILE_SIZE_LIMIT_MB"
        value: "100"
    
    # Command to run the MCP server (default command from Dockerfile)
    command: ["node", "dist/index.js"]
    
    # Volumes for persistent development workflows
    # These should match the ALLOWED_DIRECTORIES configuration
    volumes:
      - "/Users/username/Desktop:/mnt/desktop"
      - "/Users/username/Documents:/mnt/documents"
      - "/Users/username/Downloads:/mnt/downloads"
      # Optional: Mount a workspace directory for persistent file operations
      # - "./workspace:/workspace"
      # - "~/.desktop-commander:/app/config"
    
    # Security settings
    disableNetwork: false  # Can be overridden by DISABLE_NETWORK env var
    
    # Resource limits
    memory: "2g"
    cpus: "1"

# Example configuration for production with restricted access
production:
  desktop-commander-restricted:
    image: "mcp/desktop-commander:latest"
    longLived: true
    
    env:
      - name: "MCP_CLIENT_DOCKER"
        value: "true"
      - name: "NODE_ENV"
        value: "production"
      # Restricted filesystem access
      - name: "ALLOWED_DIRECTORIES"
        value: "/home/user/project,/tmp/workspace"
      - name: "DISABLE_NETWORK"
        value: "false"
    
    command: ["node", "dist/index.js"]
    
    volumes:
      - "/home/user/project:/mnt/project:ro"  # Read-only mount
      - "/tmp/workspace:/mnt/workspace"       # Read-write workspace


# Alternative single-tool configuration (NOT RECOMMENDED - causes persistence issues)
# This shows individual tools as separate containers which loses state between calls
#
# tools:
#   - name: write_file
#     description: "Write content to a file"
#     container:
#       image: "mcp/desktop-commander:latest"
#       command: ["node", "dist/index.js", "tool", "write_file"]
#       env:
#         - name: "ALLOWED_DIRECTORIES"
#           value: "/Users/username/Desktop"
#   - name: read_file
#     description: "Read content from a file"
#     container:
#       image: "mcp/desktop-commander:latest"
#       command: ["node", "dist/index.js", "tool", "read_file"]
#       env:
#         - name: "ALLOWED_DIRECTORIES"
#           value: "/Users/username/Desktop"
